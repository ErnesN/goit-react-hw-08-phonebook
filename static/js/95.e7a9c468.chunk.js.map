{"version":3,"file":"static/js/95.e7a9c468.chunk.js","mappings":"iMACA,EAAuB,8BAAvB,EAAkE,oCAAlE,EAA8G,+BAA9G,EAAsJ,gC,kBC2EtJ,EAvEuB,WACrB,IAAIA,EAAc,CAChBC,KAAM,GACNC,OAAQ,IAGJC,GAAWC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASG,KAAnB,IAC5BC,GAAWC,EAAAA,EAAAA,MAEXC,EAAkB,SAAAC,GACtB,IAAMC,EAAYD,EAAEE,OAAOX,KAC3BD,EAAYW,GAAaD,EAAEE,OAAOC,KAEnC,EAmBD,OACE,kBACEC,UAAWC,EACXC,SAAU,SAAAN,GACRA,EAAEO,iBArBiB,SAAAC,GACvB,IAAMjB,EAAOiB,EAAKjB,KAClB,GAAIE,EAASgB,MAAK,SAAAC,GAAO,OAAIA,EAAQnB,OAASA,CAArB,IACvBoB,MAAM,GAAD,OAAIpB,EAAJ,gCADP,CAKA,IAAMC,EAASgB,EAAKhB,OACdoB,GAASC,EAAAA,EAAAA,IAAW,CAAEtB,KAAAA,EAAMC,OAAAA,IAClCK,EAASe,EAJR,CAKF,CAYKE,CAAiBxB,GAVL,SAAAU,GAChBA,EAAEE,OAAOa,SAASxB,KAAKY,MAAQ,GAC/BH,EAAEE,OAAOa,SAASvB,OAAOW,MAAQ,EAClC,CAQKa,CAAUhB,EACX,EANH,WAQE,mBAAOI,UAAWC,EAAlB,kBAEE,kBACEY,SAAUlB,EACVK,UAAWC,EACXa,KAAK,OACL3B,KAAK,OACL4B,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGZ,mBAAOjB,UAAWC,EAAlB,oBAEE,kBACEY,SAAUlB,EACVK,UAAWC,EACXa,KAAK,MACL3B,KAAK,SACL4B,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAGZ,mBAAQjB,UAAWC,EAAea,KAAK,SAAvC,2BAKL,EC1ED,GAAgB,MAAQ,iCAAiC,KAAO,iCCoBhE,EAjByB,SAAC,GAA6B,IAA3BI,EAA0B,EAA1BA,aAAcnB,EAAY,EAAZA,MACxC,OACE,4BACE,sCACA,iBAAKC,UAAWC,EAAAA,UAAhB,WACE,kBAAOD,UAAWC,EAAAA,KAAlB,oCACA,kBACEF,MAAOA,EACPC,UAAWC,EAAAA,MACXd,KAAK,SACL0B,SAAUK,SAKnB,EClBD,EAAsB,4BAAtB,EAAyD,6BAAzD,EAA6F,6BCGvFC,EAAgB,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,cACjBC,EAD+C,EAAfhC,SACViC,KAAI,gBAAGC,EAAH,EAAGA,IAAKpC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OAAd,OAC9B,gBAAcY,UAAWC,EAAzB,UACGd,EADH,KACWC,EADX,KAEE,mBACEY,UAAWC,EACXuB,QAAS,kBAAMJ,EAAcG,EAApB,EACTT,KAAK,SAHP,sBAFOS,EADqB,IAahC,OAAO,eAAIvB,UAAWC,EAAf,SAA6BoB,GACrC,EAED,IAEAF,EAAcM,aAAe,CAC3BpC,SAAU,ICpBZ,IAUA,EAVsB,WACpB,OACE,4BACE,SAAC,EAAD,KACA,SAAC,EAAD,KACA,SAAC,EAAD,MAGL,C","sources":["webpack://react-homework-template/./src/modules/Phonebooks/PhonebooksForm/phonebooks-form.module.scss?7d81","modules/Phonebooks/PhonebooksForm/PhonebooksForm.jsx","webpack://react-homework-template/./src/modules/Phonebooks/PhonebooksFilter/phonebooks-filter.module.scss?be74","modules/Phonebooks/PhonebooksFilter/PhonebooksFilter.jsx","webpack://react-homework-template/./src/modules/Phonebooks/PhonebookList/phonebook-list.module.scss?27ff","modules/Phonebooks/PhonebookList/PhonebookList.jsx","pages/PhonebookPage/PhonebookPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"phonebooks-form_form__qN7gz\",\"inputBlock\":\"phonebooks-form_inputBlock__qoMNt\",\"input\":\"phonebooks-form_input__IWMTp\",\"button\":\"phonebooks-form_button__rqxhg\"};","import { useSelector, useDispatch } from 'react-redux';\nimport styles from './phonebooks-form.module.scss';\n\nimport { addContact } from 'redux/contacts/contacts-operations';\n\nconst PhonebooksForm = () => {\n  let inputValues = {\n    name: '',\n    number: '',\n  };\n\n  const contacts = useSelector(store => store.contacts.items);\n  const dispatch = useDispatch();\n\n  const onChangingInput = e => {\n    const objectKey = e.target.name;\n    inputValues[objectKey] = e.target.value;\n    return;\n  };\n\n  const handleAddContact = data => {\n    const name = data.name;\n    if (contacts.find(contact => contact.name === name)) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    const number = data.number;\n    const action = addContact({ name, number });\n    dispatch(action);\n  };\n\n  const clearForm = e => {\n    e.target.elements.name.value = '';\n    e.target.elements.number.value = '';\n  };\n\n  return (\n    <form\n      className={styles.form}\n      onSubmit={e => {\n        e.preventDefault();\n        handleAddContact(inputValues);\n        clearForm(e);\n      }}\n    >\n      <label className={styles.inputBlock}>\n        Name\n        <input\n          onChange={onChangingInput}\n          className={styles.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label className={styles.inputBlock}>\n        Number\n        <input\n          onChange={onChangingInput}\n          className={styles.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button className={styles.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\nexport default PhonebooksForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"phonebooks-filter_input__CMMCf\",\"text\":\"phonebooks-filter_text__cu6ws\"};","import PropTypes from 'prop-types';\n\nimport styles from './phonebooks-filter.module.scss';\n\nconst PhonebooksFilter = ({ handleChange, value }) => {\n  return (\n    <div>\n      <h2>Contacts</h2>\n      <div className={styles.formGroup}>\n        <label className={styles.text}>Find contacts by name</label>\n        <input\n          value={value}\n          className={styles.input}\n          name=\"filter\"\n          onChange={handleChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default PhonebooksFilter;\n\nPhonebooksFilter.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"phonebook-list_btn__P6GsM\",\"list\":\"phonebook-list_list__h5ZsW\",\"item\":\"phonebook-list_item__IwJVX\"};","import PropTypes from 'prop-types';\n\nimport styles from './phonebook-list.module.scss';\n\nconst PhonebookList = ({ removeContact, contacts }) => {\n  const myContacts = contacts.map(({ _id, name, number }) => (\n    <li key={_id} className={styles.item}>\n      {name}: {number}.\n      <button\n        className={styles.btn}\n        onClick={() => removeContact(_id)}\n        type=\"button\"\n      >\n        Delete\n      </button>\n    </li>\n  ));\n\n  return <ol className={styles.list}>{myContacts}</ol>;\n};\n\nexport default PhonebookList;\n\nPhonebookList.defaultProps = {\n  contacts: [],\n};\n\nPhonebookList.propTypes = {\n  removeContact: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import PhonebooksForm from 'modules/Phonebooks/PhonebooksForm/PhonebooksForm';\nimport PhonebooksFilter from 'modules/Phonebooks/PhonebooksFilter/PhonebooksFilter';\nimport PhonebookList from 'modules/Phonebooks/PhonebookList/PhonebookList';\n\nconst PhonebookPage = () => {\n  return (\n    <div>\n      <PhonebooksForm />\n      <PhonebooksFilter />\n      <PhonebookList />\n    </div>\n  );\n};\n\nexport default PhonebookPage;\n"],"names":["inputValues","name","number","contacts","useSelector","store","items","dispatch","useDispatch","onChangingInput","e","objectKey","target","value","className","styles","onSubmit","preventDefault","data","find","contact","alert","action","addContact","handleAddContact","elements","clearForm","onChange","type","pattern","title","required","handleChange","PhonebookList","removeContact","myContacts","map","_id","onClick","defaultProps"],"sourceRoot":""}