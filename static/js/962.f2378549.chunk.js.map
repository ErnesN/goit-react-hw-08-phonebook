{"version":3,"file":"static/js/962.f2378549.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/modules/PhonebooksForm/phonebooks-form.module.scss?075e","modules/PhonebooksForm/PhonebooksForm.jsx","webpack://react-homework-template/./src/modules/PhonebooksFilter/phonebooks-filter.module.scss?f4ee","redux/filter/filter-selectors.js","modules/PhonebooksFilter/PhonebooksFilter.jsx","redux/contacts/contacts-selectors.js","webpack://react-homework-template/./src/modules/PhonebookList/PhonebookListItem/phonebook-list-item.module.scss?df51","modules/PhonebookList/PhonebookListItem/PhonebookListItem.jsx","webpack://react-homework-template/./src/modules/PhonebookList/phonebook-list.module.scss?dde7","modules/PhonebookList/PhonebookList.jsx","pages/PhonebookPage/PhonebookPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"phonebooks-form_form__EaUDQ\",\"inputBlock\":\"phonebooks-form_inputBlock__95lvS\",\"input\":\"phonebooks-form_input__cdI6K\",\"button\":\"phonebooks-form_button__0QzIo\"};","import { useSelector, useDispatch } from 'react-redux';\nimport styles from './phonebooks-form.module.scss';\n\nimport { addContact } from 'redux/contacts/contacts-operations';\n\nconst PhonebooksForm = () => {\n  let inputValues = {\n    name: '',\n    number: '',\n  };\n\n  const contacts = useSelector(store => store.contacts.items);\n  const dispatch = useDispatch();\n\n  const onChangingInput = e => {\n    const objectKey = e.target.name;\n    inputValues[objectKey] = e.target.value;\n    return;\n  };\n\n  const handleAddContact = data => {\n    const name = data.name;\n    if (contacts.find(contact => contact.name === name)) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    const number = data.number;\n    const action = addContact({ name, number });\n    dispatch(action);\n  };\n\n  const clearForm = e => {\n    e.target.elements.name.value = '';\n    e.target.elements.number.value = '';\n  };\n\n  return (\n    <form\n      className={styles.form}\n      onSubmit={e => {\n        e.preventDefault();\n        handleAddContact(inputValues);\n        clearForm(e);\n      }}\n    >\n      <label className={styles.inputBlock}>\n        Name\n        <input\n          onChange={onChangingInput}\n          className={styles.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label className={styles.inputBlock}>\n        Number\n        <input\n          onChange={onChangingInput}\n          className={styles.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button className={styles.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\nexport default PhonebooksForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"phonebooks-filter_filter__CXIk9\"};","export const getFilter = ({ filter }) => filter;\n","import { useSelector, useDispatch } from 'react-redux';\n\nimport styles from './phonebooks-filter.module.scss';\n\nimport { setFilter } from 'redux/filter/filter-slice';\nimport { getFilter } from 'redux/filter/filter-selectors';\n\nexport const PhonebooksFilter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const handleFilter = e => {\n    const action = setFilter(e.target.value);\n    dispatch(action);\n  };\n\n  return (\n    <label className={styles.filter}>\n      Find contact\n      <input type=\"text\" value={filter} onChange={handleFilter} />\n    </label>\n  );\n};\n","export const getAllContacts = ({ contacts }) => contacts.items;\nexport const getFavoriteContacts = ({ contacts }) => {\n  const favoriteContacts = contacts.items.filter(({ favorite }) => favorite);\n  return favoriteContacts;\n};\nexport const getFilteredContacts = ({ contacts, filter }) => {\n  if (!filter) {\n    return contacts.items;\n  }\n\n  const normalizedFilter = filter.toLowerCase();\n  const result = contacts.items.filter(({ name, number }) => {\n    return (\n      name.toLowerCase().includes(normalizedFilter) ||\n      number.toLowerCase().includes(normalizedFilter)\n    );\n  });\n\n  return result;\n};\nexport const getLoadingContacts = ({ contacts }) => contacts.isLoading;\n","// extracted by mini-css-extract-plugin\nexport default {\"listItem\":\"phonebook-list-item_listItem__KZA5M\",\"button\":\"phonebook-list-item_button__aOxeP\",\"contactInfo\":\"phonebook-list-item_contactInfo__aQWol\",\"name\":\"phonebook-list-item_name__t2IfW\",\"number\":\"phonebook-list-item_number__BR3my\"};","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\n\nimport { deleteContact } from 'redux/contacts/contacts-operations';\n\nimport styles from './phonebook-list-item.module.scss';\n\nexport const PhonebookListItem = ({ nameId, name, number }) => {\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = id => {\n    const action = deleteContact(id);\n    dispatch(action);\n  };\n\n  return (\n    <li className={styles.listItem}>\n      <div className={styles.contactInfo}>\n        <span className={styles.name}>{name}:</span>\n        <span className={styles.number}>{number}</span>\n      </div>\n      <button\n        className={styles.button}\n        onClick={() => handleDeleteContact(nameId)}\n        type=\"button\"\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nPhonebookListItem.propTypes = {\n  nameId: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"phonebook-list_contactList__ZEwQP\",\"text\":\"phonebook-list_text__TblN3\"};","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { getLoadingContacts } from 'redux/contacts/contacts-selectors';\n\nimport { PhonebookListItem } from './PhonebookListItem/PhonebookListItem';\nimport Loader from 'shared/components/Loader/Loader';\n\nimport { fetchContacts } from 'redux/contacts/contacts-operations';\nimport { getFilteredContacts } from 'redux/contacts/contacts-selectors';\n\nimport styles from './phonebook-list.module.scss';\n\nexport const PhonebookList = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const list = useSelector(getFilteredContacts);\n  const isContacts = Boolean(list.length);\n\n  const loading = useSelector(getLoadingContacts);\n\n  if (loading) {\n    return <Loader />;\n  }\n\n  return (\n    <div className={styles.contactList}>\n      {isContacts && (\n        <ul className={styles.ul}>\n          {list.map(({ id, name, number }) => {\n            return (\n              <PhonebookListItem\n                key={id}\n                name={name}\n                number={number}\n                nameId={id}\n              />\n            );\n          })}\n        </ul>\n      )}\n      {!isContacts && <p className={styles.text}>There are no contacts!</p>}\n    </div>\n  );\n};\n","import PhonebooksForm from 'modules/PhonebooksForm/PhonebooksForm';\nimport { PhonebooksFilter } from 'modules/PhonebooksFilter/PhonebooksFilter';\nimport { PhonebookList } from 'modules/PhonebookList/PhonebookList';\n\nconst PhonebookPage = () => {\n  return (\n    <div>\n      <PhonebooksForm />\n      <PhonebooksFilter />\n      <PhonebookList />\n    </div>\n  );\n};\n\nexport default PhonebookPage;\n"],"names":["inputValues","name","number","contacts","useSelector","store","items","dispatch","useDispatch","onChangingInput","e","objectKey","target","value","className","styles","onSubmit","preventDefault","data","find","contact","alert","action","addContact","handleAddContact","elements","clearForm","onChange","type","pattern","title","required","getFilter","filter","PhonebooksFilter","setFilter","getFilteredContacts","normalizedFilter","toLowerCase","includes","getLoadingContacts","isLoading","PhonebookListItem","nameId","onClick","id","deleteContact","handleDeleteContact","PhonebookList","useEffect","fetchContacts","list","isContacts","Boolean","length","Loader","map"],"sourceRoot":""}