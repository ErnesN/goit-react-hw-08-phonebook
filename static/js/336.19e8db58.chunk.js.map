{"version":3,"file":"static/js/336.19e8db58.chunk.js","mappings":"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","sources":["modules/Phonebooks/PhonebooksForm/initialState.js","webpack://react-homework-template/./src/modules/Phonebooks/PhonebooksForm/phonebooks-form.module.scss?7d81","modules/Phonebooks/PhonebooksForm/PhonebooksForm.jsx","webpack://react-homework-template/./src/modules/Phonebooks/PhonebookList/phonebook-list.module.scss?27ff","modules/Phonebooks/PhonebookList/PhonebookList.jsx","webpack://react-homework-template/./src/modules/Phonebooks/PhonebooksFilter/phonebooks-filter.module.scss?be74","modules/Phonebooks/PhonebooksFilter/PhonebooksFilter.jsx","redux/contacts/contacts-selectors.js","modules/Phonebooks/MyFavoriteContacts/MyFavoriteContacts.jsx","redux/filter/filter-selectors.js","webpack://react-homework-template/./src/modules/Phonebooks/phonebooks.module.scss?16c1","modules/Phonebooks/Phonebooks.jsx"],"sourcesContent":["const initialState = {\n  name: '',\n  number: '',\n};\n\nexport default initialState;\n","// extracted by mini-css-extract-plugin\nexport default {\"text\":\"phonebooks-form_text__9I4To\",\"btn\":\"phonebooks-form_btn__6op9f\",\"input\":\"phonebooks-form_input__IWMTp\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport initialState from './initialState';\n\nimport styles from './phonebooks-form.module.scss';\n\nconst PhonebooksForm = ({ onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = ({ target }) => {\n    const { name, value, type, checked } = target;\n    const newValue = type === 'checkbox' ? checked : value;\n    setState(prevState => {\n      return { ...prevState, [name]: newValue };\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  const { name, number, favorite } = state;\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className={styles.formGroup}>\n        <label className={styles.text}>Name</label>\n        <input\n          className={styles.input}\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          placeholder=\"Enter name\"\n        />\n      </div>\n      <div className={styles.formGroup}>\n        <label className={styles.text}>Number</label>\n        <input\n          className={styles.input}\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          placeholder=\"Enter number\"\n        />\n      </div>\n      <div>\n        <label>Favorite</label>\n        <input\n          name=\"favorite\"\n          checked={favorite}\n          onChange={handleChange}\n          type=\"checkbox\"\n        />\n      </div>\n      <button className={styles.btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\nexport default PhonebooksForm;\n\nPhonebooksForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"phonebook-list_btn__P6GsM\",\"list\":\"phonebook-list_list__h5ZsW\",\"item\":\"phonebook-list_item__IwJVX\"};","import PropTypes from 'prop-types';\n\nimport styles from './phonebook-list.module.scss';\n\nconst PhonebookList = ({ removeContact, contacts }) => {\n  const myContacts = contacts.map(({ _id, name, number }) => (\n    <li key={_id} className={styles.item}>\n      {name}: {number}.\n      <button\n        className={styles.btn}\n        onClick={() => removeContact(_id)}\n        type=\"button\"\n      >\n        Delete\n      </button>\n    </li>\n  ));\n\n  return <ol className={styles.list}>{myContacts}</ol>;\n};\n\nexport default PhonebookList;\n\nPhonebookList.defaultProps = {\n  contacts: [],\n};\n\nPhonebookList.propTypes = {\n  removeContact: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"phonebooks-filter_input__CMMCf\",\"text\":\"phonebooks-filter_text__cu6ws\"};","import PropTypes from 'prop-types';\n\nimport styles from './phonebooks-filter.module.scss';\n\nconst PhonebooksFilter = ({ handleChange, value }) => {\n  return (\n    <div>\n      <h2>Contacts</h2>\n      <div className={styles.formGroup}>\n        <label className={styles.text}>Find contacts by name</label>\n        <input\n          value={value}\n          className={styles.input}\n          name=\"filter\"\n          onChange={handleChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default PhonebooksFilter;\n\nPhonebooksFilter.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n};\n","export const getAllContacts = ({ contacts }) => contacts.items;\nexport const getFavoriteContacts = ({ contacts }) => {\n  const favoriteContacts = contacts.items.filter(({ favorite }) => favorite);\n  return favoriteContacts;\n};\nexport const getFilteredContacts = ({ contacts, filter }) => {\n  if (!filter) {\n    return contacts.items;\n  }\n\n  const normalizedFilter = filter.toLowerCase();\n  const result = contacts.items.filter(({ name, number }) => {\n    return (\n      name.toLowerCase().includes(normalizedFilter) ||\n      number.toLowerCase().includes(normalizedFilter)\n    );\n  });\n\n  return result;\n};\n","import { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getFavoriteContacts } from 'redux/contacts/contacts-selectors';\nimport styles from '../PhonebookList/phonebook-list.module.scss';\n\nconst MyFavoriteContacts = ({ removeContact }) => {\n  const contacts = useSelector(getFavoriteContacts);\n  const myFavoriteContacts = contacts.map(({ id, name, number }) => (\n    <li key={id} className={styles.item}>\n      {name}: {number}.\n      <button\n        className={styles.btn}\n        onClick={() => removeContact(id)}\n        type=\"button\"\n      >\n        Delete\n      </button>\n    </li>\n  ));\n  return (\n    <div>\n      <h2>My Favorite contacts</h2>\n      <ol className={styles.list}>{myFavoriteContacts}</ol>\n    </div>\n  );\n};\n\nexport default MyFavoriteContacts;\n\nMyFavoriteContacts.defaultProps = {\n  contacts: [],\n};\n\nMyFavoriteContacts.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","export const getFilter = ({ filter }) => filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"phonebook\":\"phonebooks_phonebook__n83Qu\",\"wrapper\":\"phonebooks_wrapper__CL6a8\"};","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport PhonebooksForm from './PhonebooksForm/PhonebooksForm';\nimport PhonebookList from './PhonebookList/PhonebookList';\nimport PhonebooksFilter from './PhonebooksFilter/PhonebooksFilter';\nimport MyFavoriteContacts from './MyFavoriteContacts/MyFavoriteContacts';\n\nimport {\n  fetchContacts,\n  addContact,\n  deleteContact,\n} from 'redux/contacts/contacts-operations';\nimport { setFilter } from 'redux/filter/filter-slice';\nimport { getFilteredContacts } from 'redux/contacts/contacts-selectors';\nimport { getFilter } from 'redux/filter/filter-selectors';\nimport styles from './phonebooks.module.scss';\n\nconst Phonebooks = () => {\n  const filteredContacts = useSelector(getFilteredContacts);\n  const filter = useSelector(getFilter);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleAddContact = ({ name, number, favorite }) => {\n    dispatch(addContact({ name, number, favorite }));\n  };\n\n  const handleDeleteContact = id => {\n    dispatch(deleteContact(id));\n  };\n  const handleFilter = ({ target }) => {\n    dispatch(setFilter(target.value));\n  };\n\n  const isContacts = Boolean(filteredContacts.length);\n\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.block}>\n        <h1>Phonebook</h1>\n        <PhonebooksForm onSubmit={handleAddContact} />\n      </div>\n      <div className={styles.block}>\n        <MyFavoriteContacts />\n        <PhonebooksFilter value={filter} handleChange={handleFilter} />\n        {isContacts && (\n          <PhonebookList\n            removeContact={handleDeleteContact}\n            contacts={filteredContacts}\n          />\n        )}\n        {!isContacts && <p>No contacts in list</p>}\n      </div>\n    </div>\n  );\n};\n\nexport default Phonebooks;\n"],"names":["name","number","onSubmit","useState","initialState","state","setState","handleChange","target","value","type","checked","newValue","prevState","favorite","e","preventDefault","className","styles","onChange","placeholder","PhonebookList","removeContact","myContacts","contacts","map","_id","onClick","defaultProps","getFavoriteContacts","items","filter","getFilteredContacts","normalizedFilter","toLowerCase","includes","MyFavoriteContacts","myFavoriteContacts","useSelector","id","getFilter","filteredContacts","dispatch","useDispatch","useEffect","fetchContacts","isContacts","Boolean","length","addContact","setFilter","deleteContact"],"sourceRoot":""}